name: Security Scan

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: '0 0 * * *' # Run daily at midnight

jobs:
  security-scan:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript, typescript
          queries: security-extended, security-and-quality

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npm audit fix || true

      # Dependency scanning
      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      # SAST scanning with CodeQL
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      # Secret scanning
      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

      # Container scanning (if using Docker)
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      # OWASP Dependency Check
      - name: OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'your-project-name'
          path: '.'
          format: 'HTML'
          args: >
            --suppression suppression.xml
            --failOnCVSS 7
            --enableRetired

      # SonarCloud scanning
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN || '' }}

      # Snyk scanning
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

      # Upload security scan results
      - name: Upload scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif
        if: always()

      # Notify on failures
      - name: Notify security team
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const issue = {
              title: 'Security Scan Failed',
              body: 'Security scan failed in workflow ${{ github.workflow }}. Please investigate.',
              labels: ['security', 'high-priority']
            }
            github.rest.issues.create({
              ...issue,
              owner: context.repo.owner,
              repo: context.repo.repo
            })

  security-compliance:
    needs: security-scan
    runs-on: ubuntu-latest
    steps:
      - name: Check security policy compliance
        run: |
          echo "Checking security policy compliance..."
          # Add your compliance checks here

      - name: Generate security report
        run: |
          echo "Generating security report..."
          # Add your report generation logic here

      - name: Upload security report
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: security-report/
        if: always()
